@page "/article/{Id:int}"
@using Lantin.Model
@inject IFreeSql Db
@inject NavigationManager NavigationManager
@inject ISnackbar Snackbar
@inject IJSRuntime Js
@inject WebSiteConfigService WebSiteConfig

<PageTitle>@_article?.Title – @WebSiteConfig.GetValue("WebSiteName")</PageTitle>

<MudContainer Style="margin-top:100px">
    <MudPaper Class="pa-8 pb-16">
        <MudText Typo="Typo.h3" Class="mb-5">@_article?.Title</MudText>
        <MudChip Icon="@Icons.Material.Filled.Person" Color="Color.Dark">作者</MudChip>
        <MudChip Icon="@Icons.Filled.Numbers" Color="Color.Dark">@(Utility.ReContent(_article?.Content).Length) 字</MudChip>
        <MudChip Icon="@Icons.Filled.DateRange" Color="Color.Dark">
            @($"{_article!.DateTime.Year}年{_article.DateTime.Month}月{_article.DateTime.Day}日")
        </MudChip>
        <MudChip Icon="@Icons.Filled.AccessTimeFilled" Color="Color.Dark">
            @($"{_article!.DateTime.Hour}:{_article.DateTime.Minute}")
        </MudChip>
        <br/><br/>
        <MudText Typo="Typo.body1" Class="pb-8">
            <div class="markdown-body-dark">
                <MudMarkdown Value="@_article?.Content" >
                    
                </MudMarkdown>
            </div>
        </MudText>
        <MudPaper Class="mb-5 pa-5" Elevation="0" Style="background-color:#21695126;border-radius:20px;text-align: center">
            本站所有文章除特别声明外，均采用 <MudChip Variant="Variant.Outlined" Color="Color.Secondary">CC BY-NC-SA 4.0</MudChip> 许可协议
            转载请注明来自
            <MudLink Href="@(WebSiteConfig.GetValue("WebSiteUrl"))">
                <MudChip Variant="Variant.Outlined" Color="Color.Secondary">@(WebSiteConfig.GetValue("WebSiteName"))</MudChip>
            </MudLink>
        </MudPaper>
        @if (_last is not null)
        {
            <MudButton Variant="Variant.Outlined" Color="Color.Secondary" Style="float:left" OnClick="GetLast">上一篇：@_last?.Title</MudButton>
        }
        @if (_next is not null)
        {
            <MudButton Variant="Variant.Outlined" Color="Color.Secondary" Style="float:right;" OnClick="GetNext">下一篇：@_next?.Title</MudButton>
        }
    </MudPaper>
    <br/>
    <br/>
    @if (_comments.Count > 0)
    {
        <MudPaper Class="pa-4" Elevation="0">
            @foreach (var item in _comments)
            {
                <MudCard Class="mb-5" Elevation="0">
                    <MudCardHeader>
                        <CardHeaderAvatar>
                            <MudAvatar Color="Color.Secondary" Image="@(WebSiteConfig.GetValue("Gravatar") + Utility.EncodeMd5(item.Email))"></MudAvatar>
                        </CardHeaderAvatar>
                        <CardHeaderContent>
                            @if (item.Url is null)
                            {
                                <MudText Typo="Typo.body1">@item.Name</MudText>
                            }
                            else
                            {
                                <NavLink Href="@item.Url" Target="_blank">
                                    <MudText Typo="Typo.body1">@item.Name</MudText>
                                </NavLink>
                            }
                            <MudText Typo="Typo.body2" Color="Color.Secondary">@item.DateTime</MudText>
                        </CardHeaderContent>
                        <CardHeaderActions>
                            <MudIconButton Icon="@Icons.Material.Filled.Reply" Color="Color.Inherit"/>
                        </CardHeaderActions>
                    </MudCardHeader>
                    <MudCardContent>
                        <MudText Typo="Typo.body2">
                            @item.Content
                        </MudText>
                    </MudCardContent>
                </MudCard>
            }
        </MudPaper>
        <br/>
        <br/>
    }

    <MudPaper Class="pa-8">
        <MudText Typo="Typo.h4">评论</MudText>
        <MudGrid Class="pt-5">
            <MudItem xs="12" lg="4" md="4">
                <MudTextField @bind-Value="_email" Label="邮箱 *" Variant="Variant.Filled"/>
            </MudItem>
            <MudItem xs="12" lg="4" md="4">
                <MudTextField @bind-Value="_name" Label="昵称 *" Variant="Variant.Filled"/>
            </MudItem>
            <MudItem xs="12" lg="4" md="4">
                <MudTextField @bind-Value="_url" Label="网址" Variant="Variant.Filled"/>
            </MudItem>
            <MudItem xs="12">
                <MudTextField Placeholder="在这里输入您的评论内容 *" @bind-Value="_content" Variant="Variant.Filled" Lines="5"/>
            </MudItem>
            <MudItem xs="5">
                <MudButton OnClick="PostComment" Variant="Variant.Filled" Color="Color.Secondary">发送</MudButton>
            </MudItem>
        </MudGrid>
    </MudPaper><br/><br/>
</MudContainer>

@code {

    [Parameter]
    public int Id { get; set; }

    Model.Article? _article;
    Model.Article? _last;
    Model.Article? _next;
    string? _email;
    string? _name;
    string? _url;
    string? _content;
    List<Comment> _comments = new();

    protected override void OnInitialized()
    {
        Load();
    }

    protected override async Task OnAfterRenderAsync(bool firstRender)
    {
        await Js.InvokeVoidAsync("InitHighlight");
        await Js.InvokeVoidAsync("InitFancyBox");
    }

    void Load()
    {
        _article = Db.Select<Model.Article>().Where(x => x.ArticleId == Id).First();
        _comments = Db.Select<Comment>().Where(x => x.ArticleId == Id).ToList();
        _last = Db.Select<Model.Article>()
            .Where(x => x.ArticleId < Id && x.Visibility != Visibility.Hide).OrderBy("ArticleId DESC").Limit(1).First();
        _next = Db.Select<Model.Article>()
            .Where(x => x.ArticleId > Id && x.Visibility != Visibility.Hide).Limit(1).First();
    }

    void GetLast()
    {
        Id = _last!.ArticleId;
        NavigationManager.NavigateTo($"/article/{_last?.ArticleId}");
        Load();
    }

    void GetNext()
    {
        Id = _next!.ArticleId;
        NavigationManager.NavigateTo($"/article/{_next?.ArticleId}");
        Load();
    }

    async void PostComment()
    {
        Console.WriteLine(_email?.Trim().Length);
        if (_email is null || _name is null || _content is null)
        {
            Snackbar.Add("请填写完整！");
            return;
        }
        await Db.Insert<Comment>()
            .AppendData(new Comment
            {
                ArticleId = Id,
                Email = _email,
                Name = _name,
                Url = _url,
                Content = _content,
                DateTime = DateTime.Now
            })
            .ExecuteIdentityAsync();
        _content = null;
        _comments = await Db.Select<Comment>().Where(x => x.ArticleId == Id).ToListAsync();
        StateHasChanged();
        Snackbar.Add("回复成功~");
    }

}