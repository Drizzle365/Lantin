@page "/{page:int?}"
@inject IFreeSql Db
@inject NavigationManager NavigationManager
@inject WebSiteConfigService WebSiteConfig
<PageTitle>
    @WebSiteConfig.GetValue("WebSiteName") | 回响
    @if (Page is not null)
    {
        @($" - 第{Page}页")
    }
</PageTitle>
<TopCard></TopCard>

<MudContainer Style="margin-top:100px">
    <MudGrid>
        <MudItem lg="8" md="8" sm="6" xs="12">
            <MudCarousel Class="mud-width-full rounded-xl" Style="height:300px" ShowArrows="true" ShowBullets="true" EnableSwipeGesture="true" AutoCycle="true" TData="object">
                <MudCarouselItem Transition="Transition.Slide" Color="@Color.Primary">
                    <div class="d-flex" style="height:100%">
                        <MudIcon Class="mx-auto my-auto" Icon="@Icons.Custom.Brands.MudBlazor" Size="@Size.Large"/>
                    </div>
                </MudCarouselItem>
                <MudCarouselItem Transition="Transition.Slide" Color="@Color.Secondary">
                    <div class="d-flex" style="height:100%">
                        <MudIcon Class="mx-auto my-auto" Icon="@Icons.Custom.Brands.MudBlazor" Size="@Size.Large"/>
                    </div>
                </MudCarouselItem>

            </MudCarousel>
            <MudGrid Justify="Justify.SpaceBetween" Class="mt-5">
                @foreach (var item in _articles)
                {
                    <MudItem lg="6" md="6" sm="12" xs="12">
                        <MudCard Style="background-color:#20282d;margin:20px 0;">
                            <MudCardContent>
                                <MudLink Href="@($"/article/{item.ArticleId}")" Color="Color.Surface">
                                    <MudText Typo="Typo.h5" Style="cursor:pointer">@item.Title</MudText>
                                </MudLink><br/>
                                <MudText Typo="Typo.body2">
                                    <div class="article-content">
                                        @Utility.SubStr(Utility.ReContent(item.Content), 200)
                                    </div>
                                </MudText>
                            </MudCardContent>

                            <MudCardActions>
                                <MudChip Variant="Variant.Text" Color="Color.Secondary">
                                    @($"{item.DateTime.Year}年{item.DateTime.Month}月{item.DateTime.Day}日")
                                </MudChip>
                                <MudSpacer></MudSpacer>

                                <MudLink Href="@($"/article/{item.ArticleId}")" Color="Color.Surface">
                                    <MudButton Variant="Variant.Text" Color="Color.Secondary">阅读更多</MudButton>
                                </MudLink>
                            </MudCardActions>
                        </MudCard>
                    </MudItem>
                }
            </MudGrid>
            <div style="text-align:center">
                <MudPagination Color="Color.Secondary" SelectedChanged="PageChanged" Variant="Variant.Text" Count="@((int)(_articleCount / 8))"/>

            </div>
        </MudItem>
        <MudItem lg="4" md="4" sm="6" xs="12">
            <div id="first-card">
                <MudText Typo="Typo.h4" Style="line-height:2">
                    你好， 我叫
                    <span style="color:antiquewhite">Lantin</span><br/>
                    欢迎来到<br/>
                    我的个人博客
                </MudText>
            </div>
            <MudPaper Class="pa-5 rounded-xl d-flex justify-space-between">
                <MudIconButton Icon="@Icons.Custom.Brands.GitHub" Color="Color.Inherit" aria-label="add to favorite"></MudIconButton>
                <MudIconButton Icon="@Icons.Custom.Brands.Gmail" Color="Color.Inherit" aria-label="add to favorite"></MudIconButton>
                <MudIconButton Icon="fab fa-qq" Color="Color.Inherit" aria-label="add to favorite"></MudIconButton>
                <MudIconButton Icon="fab fa-weixin" Color="Color.Inherit" aria-label="add to favorite"></MudIconButton>
            </MudPaper>
            <MudPaper Class="pa-5 rounded-xl mt-5">
                <MudChart ChartType="ChartType.Pie" InputData="@_data" @bind-SelectedIndex="_selectedIndex" InputLabels="@_labels" Width="300px" Height="300px"/>
            </MudPaper>
            <MudPaper Class="pa-5 rounded-xl mt-5">
                <MudList Clickable="true">
                    <MudListItem >
                        <MudText Style="float:left;margin-top:8px">运行时间</MudText>
                        <MudChip Style="float:right">365天</MudChip>
                    </MudListItem>
                    <MudListItem >
                        <MudText Style="float:left;margin-top:8px">技术支持</MudText>
                    </MudListItem>
                    <MudDivider Class="ma-2"></MudDivider>
                    <MudChip>.Net7</MudChip>
                    <MudChip Color="Color.Secondary">Blazor</MudChip>
                    <MudChip Color="Color.Info">C#</MudChip>
                    <MudChip Color="Color.Success">MudBlazor</MudChip>
                    <MudChip Color="Color.Warning">CKEditor</MudChip>
                    <MudChip Color="Color.Error">FreeSql</MudChip>
                    <MudChip Color="Color.Dark">ASP.NET</MudChip>
                </MudList>
            </MudPaper>
        </MudItem>
    </MudGrid>
</MudContainer>

@code{
    long _articleCount;

    [Parameter]
    public int? Page { get; set; }

    List<Model.Article> _articles = new();
    private int _selectedIndex = -1;
    int _dataSize = 4;
    double[] _data = { 35, 25, 20, 5, 8, 10 };
    string[] _labels = { "日记", "闲言碎语", "DotNet", "JavaScript", "Python", "算法和数据结构" };

    protected override void OnInitialized()
    {
        _articleCount = Db.Select<Model.Article>()
            .Where(x => x.Visibility != Model.Visibility.Hide)
            .Count();
        if (Page is null)
        {
            GetPage();
        }
        else
        {
            GetPage((int)Page);
        }
    }

    void PageChanged(int i)
    {
        GetPage(i);
        NavigationManager.NavigateTo($"/{i}");
    }

    void GetPage(int page = 1, int size = 8)
    {
        if (page <= 1)
            page = 1;
        _articles = Db.Select<Model.Article>()
            .Where(x => x.Visibility != Model.Visibility.Hide)
            .Offset((page - 1) * size)
            .Limit(size)
            .OrderBy("ArticleId DESC")
            .ToList();
    }

}