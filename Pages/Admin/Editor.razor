@page "/Admin/Editor"
@inject ISnackbar Snackbar
@inject IJSRuntime Js
@inject IFreeSql Db
<PageTitle>后台</PageTitle>
<style>
    #editor{
        min-height:300px
    }
</style>

<MudPaper Elevation="0" Style="border-radius:20px 20px 0 0">
    <MudToolBar>
        <MudTextField @bind-Value="_title" Placeholder="标题"></MudTextField>
        <MudSpacer/>
        <MudButtonGroup Variant="Variant.Outlined" Class="mt-5">
            <MudButton>草稿</MudButton>
            <MudButton OnClick="Post">发布</MudButton>
        </MudButtonGroup>
    </MudToolBar>
</MudPaper>
<MudPaper Elevation="0" Class="rounded-0 pa-3">
    <MudIconButton Icon="@Icons.Filled.Image" aria-label="delete"></MudIconButton>
    <MudIconButton Icon="@Icons.Filled.VideoCameraBack"></MudIconButton>
    <MudIconButton Icon="@Icons.Filled.LibraryMusic"></MudIconButton>
    <MudIconButton Icon="@Icons.Filled.Code"></MudIconButton>
    <MudChipSet @bind-SelectedChip="_selected" Filter="true" Style="display:inline-block">
        <MudChip Color="Color.Success" Default="true">公开</MudChip>
        <MudChip Color="Color.Warning">私密</MudChip>
    </MudChipSet>
</MudPaper>
<MudPaper Elevation="3" Class="pa-3 rounded-0">
    <div id="editor"></div>
</MudPaper>

@code {
    string? _title;
    MudChip? _selected;

    protected override async Task OnAfterRenderAsync(bool firstRender)
    {
        if (firstRender)
        {
            await Js.InvokeVoidAsync("InitEditor");
        }
    }

    async Task<string> GetEditorData()
    {
        return await Js.InvokeAsync<string>("GetEditorData");
    }

    async Task Post()
    {
        await Db.Insert(new Model.Article
        {
            Content = await GetEditorData(),
            Datetime = DateTime.Now,
            Title = _title
        })
            .ExecuteIdentityAsync();
        Snackbar.Add("发布成功！");
    }

}