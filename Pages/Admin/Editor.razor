@page "/Admin/Editor"
@inject ISnackbar Snackbar
@inject IFreeSql Db
@inject WebSiteConfigService WebSiteConfigService
@inject IWebHostEnvironment Environment
@inject IJSRuntime Js
@using System.IO
@using Lantin.Model
@using Lantin.Model.Enum
<PageTitle>文章发布 | @WebSiteConfigService.GetValue("WebSiteName")</PageTitle>

<MudPaper Elevation="0" Style="border-radius:20px 20px 0 0">
    <MudToolBar>
        <MudTextField @bind-Value="_title" Placeholder="标题"></MudTextField>
        <MudSpacer/>
        <MudButtonGroup Variant="Variant.Outlined" Class="mt-5">
            <MudButton>草稿</MudButton>
            <MudButton OnClick="Post">发布</MudButton>
        </MudButtonGroup>
    </MudToolBar>
</MudPaper>
<MudPaper Elevation="0" Class="rounded-0 pa-3">
    <MudIconButton Icon="@Icons.Filled.Image" OnClick="() => { OpenDialog(InsertDialogEnum.图片); }"></MudIconButton>
    <MudIconButton Icon="@Icons.Filled.VideoCameraBack" OnClick="() => { OpenDialog(InsertDialogEnum.视频); }"></MudIconButton>
    <MudIconButton Icon="@Icons.Filled.LibraryMusic" OnClick="() => { OpenDialog(InsertDialogEnum.音乐); }"></MudIconButton>
    <MudIconButton Icon="@Icons.Filled.Code" OnClick="() => { OpenDialog(InsertDialogEnum.代码); }"></MudIconButton>

</MudPaper>
<MudGrid Spacing="0">
    <MudItem lg="9" md="8" sm="7" xl="6" xs="12">
        <MudTabs Elevation="0" ApplyEffectsToContainer="true" Color="@Color.Dark">
            <MudTabPanel Text="编辑" Icon="@Icons.Filled.EditNote">
                <MudPaper Elevation="0" Class="rounded-0" Style="position: relative;height: 400px">
                    <textarea @bind="_content" id="editor"></textarea>
                </MudPaper>
            </MudTabPanel>
            <MudTabPanel Text="预览" Icon="@Icons.Filled.RemoveRedEye">
                <MudPaper Elevation="0" Class="rounded-0 pa-3" Style="position: relative;min-height: 400px">
                    <div class="markdown-body-light">
                        <MudMarkdown Value="@_content"></MudMarkdown>
                    </div>
                </MudPaper>
            </MudTabPanel>
        </MudTabs>
    </MudItem>
    <MudItem lg="3" md="4" sm="5" xl="6" xs="12">
        <MudPaper Elevation="0" Style="text-align: center">
            <div style="height: 48px;width:100%;background-color: black;padding-top: 4px">
                <MudChip Label="true" Color="Color.Dark">文章设置</MudChip>
            </div>
            <MudExpansionPanels MultiExpansion="true" Elevation="0" DisableBorders="true">
                <MudExpansionPanel>
                    <TitleContent>
                        <MudChip Label="true" Style="width: 80%" Color="Color.Error">隐私权限</MudChip>
                    </TitleContent>
                    <ChildContent>
                        <MudChipSet @bind-SelectedChip="_selected" Filter="true" Style="display:inline-block">
                            <MudChip Text="公开" Color="Color.Success" Default="true">公开</MudChip>
                            <MudChip Text="私密" Color="Color.Warning">私密</MudChip>
                            <MudChip Text="密码" Color="Color.Error">密码</MudChip>
                        </MudChipSet>
                        @if (_selected?.Text == "密码")
                        {
                            <MudTextField Class="ma-3" @bind-Value="_password" Margin="Margin.Dense" Variant="Variant.Filled" Label="输入密码"></MudTextField>
                        }
                    </ChildContent>
                </MudExpansionPanel>
                <MudExpansionPanel>
                    <TitleContent>
                        <MudChip Label="true" Style="width: 80%" Color="Color.Success">分类目录</MudChip>
                    </TitleContent>
                    <ChildContent>
                        <MudChipSet Filter="true">
                                                <MudChip Value="0" Color="Color.Dark" Default="true">未分类</MudChip>
                                                <MudChip Color="Color.Dark">数据结构</MudChip>
                                                <MudChip Color="Color.Dark">C#</MudChip>
                                            </MudChipSet>
                    </ChildContent>
                </MudExpansionPanel>
                <MudExpansionPanel>
                     <TitleContent>
                                            <MudChip Label="true" Style="width: 80%" Color="Color.Primary">标签</MudChip>
                                        </TitleContent>
                    <ChildContent>
                        <MudChipSet AllClosable="true" OnClose="ClosedTag">
                                                @foreach (var value in values)
                                                {
                                                    <MudChip Text="@value"></MudChip>
                                                }
                                            </MudChipSet>
                                            <MudTextField @bind-Value="addTag"></MudTextField>
                                            <MudIconButton Variant="Variant.Filled" Icon="@Icons.Material.Filled.Add" OnClick="AddTag"></MudIconButton>

                    </ChildContent>
                    @code
                    {
                        string? addTag;
                        List<string> values = new ();
                         void AddTag() => values.Add(addTag ?? "");
                         void ClosedTag(MudChip chip) => values.Remove(chip.Text);
                    }
                </MudExpansionPanel>
            </MudExpansionPanels>
        </MudPaper>
    </MudItem>
</MudGrid>
<br/><br/>
<MudDialog @bind-IsVisible="_dialogVisible">
    <TitleContent>
        @switch (_insertDialogEnum)
        {
            case InsertDialogEnum.图片:
                <MudText Typo="Typo.h6">
                    <MudIcon Icon="@Icons.Material.Filled.Edit" Class="mr-3"/> 插入图片
                </MudText>
                break;

            case InsertDialogEnum.视频:
                <MudText Typo="Typo.h6">
                    <MudIcon Icon="@Icons.Material.Filled.Edit" Class="mr-3"/> 插入视频
                </MudText>
                break;
            case InsertDialogEnum.音乐:
                <MudText Typo="Typo.h6">
                    <MudIcon Icon="@Icons.Material.Filled.Edit" Class="mr-3"/> 插入音乐
                </MudText>
                break;
            case InsertDialogEnum.代码:
                <MudText Typo="Typo.h6">
                    <MudIcon Icon="@Icons.Material.Filled.Edit" Class="mr-3"/> 插入代码
                </MudText>
                break;
        }
    </TitleContent>
    <DialogContent>
        @switch (_insertDialogEnum)
        {
            case InsertDialogEnum.图片:
                <MudPaper MinWidth="350px" Elevation="0">
                    <MudFileUpload T="IBrowserFile" FilesChanged="UploadFiles" Accept="image/*">
                        <ButtonTemplate>
                            <MudFab HtmlTag="label"
                                    Color="Color.Primary"
                                    Icon="@Icons.Filled.Image"
                                    Label="上传 & 拍摄"
                                    for="@context"/>
                        </ButtonTemplate>
                    </MudFileUpload><br/>
                    <MudStack Row="true">
                        <MudTextField @bind-Value="_imageUrl" Label="输入图片外链"></MudTextField>
                        <MudButton Variant="Variant.Filled" Color="Color.Success" OnClick="() => { InsertImage(); }">获取</MudButton>
                    </MudStack><br/><br/>
                    @if (_files.Count > 0)
                    {
                        <MudText Typo="@Typo.h6">已上传 @_files.Count() 个附件:</MudText>
                        <MudList>
                            @foreach (var file in _files)
                            {
                                <MudListItem Icon="@Icons.Filled.AttachFile" @key="@file">
                                    <span style="padding-right: 10px;line-height: 36px">@file.Name</span>
                                    <MudButton Style="float: right" Variant="Variant.Filled" Color="Color.Primary" OnClick="() => { InsertImage(file); }">
                                        插入
                                    </MudButton>
                                </MudListItem>
                            }
                        </MudList>
                    }
                </MudPaper>
                break;
            case InsertDialogEnum.视频:
                <MudPaper MinWidth="350px" Elevation="0">
                    <MudFileUpload T="IBrowserFile" FilesChanged="UploadFiles" Accept="video/*">
                        <ButtonTemplate>
                            <MudFab HtmlTag="label"
                                    Color="Color.Primary"
                                    Icon="@Icons.Filled.Image"
                                    Label="上传 & 拍摄"
                                    for="@context"/>
                        </ButtonTemplate>
                    </MudFileUpload><br/>
                    @if (_files.Count > 0)
                    {
                        <MudText Typo="@Typo.h6">已上传 @_files.Count() 个附件:</MudText>
                        <MudList>
                            @foreach (var file in _files)
                            {
                                <MudListItem Icon="@Icons.Filled.AttachFile" @key="@file">
                                    <span style="padding-right: 10px;line-height: 36px">@file.Name</span>
                                    <MudButton Style="float: right" Variant="Variant.Filled" Color="Color.Primary" OnClick="() => { InsertVideo(file); }">
                                        插入
                                    </MudButton>
                                </MudListItem>
                            }
                        </MudList>
                    }
                </MudPaper>
                break;
            case InsertDialogEnum.音乐:
                <MudPaper MinWidth="350px" Elevation="0">
                    <MudFileUpload T="IBrowserFile" FilesChanged="UploadFiles" Accept="audio/*">
                        <ButtonTemplate>
                            <MudFab HtmlTag="label"
                                    Color="Color.Primary"
                                    Icon="@Icons.Filled.Image"
                                    Label="上传"
                                    for="@context"/>
                        </ButtonTemplate>
                    </MudFileUpload><br/>
                    <MudStack Row="true">
                        <MudTextField @bind-Value="_netEaseCloudMusicId" Label="输入网易云ID"></MudTextField>
                        <MudButton Variant="Variant.Filled" Color="Color.Success" OnClick="() => { InsertAudio(); }">获取</MudButton>
                    </MudStack><br/><br/>
                    @if (_files.Count > 0)
                    {
                        <MudText Typo="@Typo.h6">已上传 @_files.Count() 个附件:</MudText>
                        <MudList>
                            @foreach (var file in _files)
                            {
                                <MudListItem Icon="@Icons.Filled.AttachFile" @key="@file">
                                    <span style="padding-right: 10px;line-height: 36px">@file.Name</span>
                                    <MudButton Style="float: right" Variant="Variant.Filled" Color="Color.Primary" OnClick="() => { InsertAudio(file); }">
                                        插入
                                    </MudButton>
                                </MudListItem>
                            }
                        </MudList>
                    }
                </MudPaper>
                break;
            case InsertDialogEnum.代码:
                <MudPaper MinWidth="350px" Elevation="0">
                    <MudSelect @bind-Value="_codeEnum">
                        @foreach (CodeEnum item in Enum.GetValues(typeof(CodeEnum)))
                        {
                            <MudSelectItem Value="@(item)"></MudSelectItem>
                        }
                    </MudSelect>
                    <MudTextField @bind-Value="@_code" Label="Outlined" Variant="Variant.Outlined" Lines="8"/>
                    <MudButton OnClick="() => { InsertCode(_codeEnum); }" Class="mt-5" Variant="Variant.Filled" Color="Color.Primary">插入</MudButton>
                </MudPaper>
                break;
        }
    </DialogContent>
</MudDialog>

@code {
    InsertDialogEnum _insertDialogEnum;
    string? _title;
    MudChip? _selected;
    bool _dialogVisible;
    string? _content;
    string? _imageUrl;
    string? _code;
    CodeEnum _codeEnum;
    readonly List<UpLoad> _files = new();
    string? _netEaseCloudMusicId;
    string? _password;

    protected override async Task OnAfterRenderAsync(bool firstRender)
    {
        await Js.InvokeVoidAsync("EditorTab");
    }

    async Task Post()
    {
        if (_title is null || _content is null)
        {
            Snackbar.Add("请输入标题和内容再发布");
            return;
        }
        var vis = Visibility.Open;

        if (_selected?.Text == "私密")
        {
            vis = Visibility.Hide;
        }
        else if (_selected?.Text == "密码")
        {
            vis = Visibility.Cypher;
        }
        await Db.Insert(new Article
        {
            Content = _content,
            DateTime = DateTime.Now,
            Title = _title,
            FileId = string.Join(" ", _files.Select(item => item.Guid).ToList()),
            Visibility = vis,
            Additional = _password
        })
            .ExecuteIdentityAsync();
        Snackbar.Add("发布成功！");
    }

    void OpenDialog(InsertDialogEnum p)
    {
        _insertDialogEnum = p;
        _dialogVisible = true;
    }

    void InsertImage(UpLoad? file = null)
    {
        if (file is not null)
        {
            _imageUrl = file.Path;
        }
        if (_imageUrl is null)
        {
            Snackbar.Add("请输入图片外链后获取!");
            return;
        }
        _content += $"\n![]({_imageUrl})";
        _imageUrl = null;
        _dialogVisible = false;
    }

    void InsertVideo(UpLoad file)
    {
        _content += $"\n<video src=\"{file.Path}\" controls=\"controls\" width=\"100%\"></video>";
        _dialogVisible = false;
    }

    void InsertAudio(UpLoad? file = null)
    {
        if (file is null)
        {
            if (_netEaseCloudMusicId is null)
            {
                Snackbar.Add("请选择一个音乐再插入！");
                return;
            }
            _content += $"\n<iframe frameborder=\"no\" border=\"0\" marginwidth=\"0\" marginheight=\"0\" width=100% height=86 src=\"//music.163.com/outchain/player?type=2&id={_netEaseCloudMusicId}&auto=1&height=66\"></iframe>\n";
            _dialogVisible = false;
        }
        else
        {
            _content += $"\n<audio controls><source src=\"{file.Path}\" type=\"audio/mpeg\"></audio>\n";
            _dialogVisible = false;
        }
    }

    void InsertCode(CodeEnum? codeClass)
    {
        if (_code is null || codeClass is null)
        {
            Snackbar.Add("请输入代码！");
            return;
        }
        _content += $"\n```{codeClass.ToString()}\n{_code}\n```";
        _code = null;
        _dialogVisible = false;
    }

    private async void UploadFiles(IBrowserFile file)
    {
        var guid = Guid.NewGuid().ToString();
        var path = Path.Combine(Environment.ContentRootPath, "wwwroot",
            "upload", DateTime.Now.Year.ToString(),
            DateTime.Now.Month.ToString());
        Directory.CreateDirectory(path);
        var www = Path.Combine("upload", DateTime.Now.Year.ToString(),
            DateTime.Now.Month.ToString()) + "\\" + guid + "." + file.Name.Split('.').Last();
        await using FileStream fs = new(path + "\\" + guid + "." + file.Name.Split('.').Last(), FileMode.Create);
        await file.OpenReadStream(10240000).CopyToAsync(fs);
        var one = new UpLoad
        {
            Guid = guid,
            Name = file.Name,
            Path = www,
            DateTime = DateTime.Now
        };
        await Db.Insert<UpLoad>().AppendData(one).ExecuteAffrowsAsync();
        _files.Add(one);
        StateHasChanged();
    }

}