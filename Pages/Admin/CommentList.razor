@page "/admin/comment/list"
@inject IFreeSql Db
<PageTitle>评论列表 | Lantin</PageTitle>
<MudTable Loading="@loading" LoadingProgressColor="Color.Info" Elevation="0" Class="rounded-xl" Items="@Elements" Hover="true" Filter="new Func<Model.Comment, bool>(FilterFunc1)" @bind-SelectedItem="selectedItem1">
    <ToolBarContent>
        <MudText Typo="Typo.h6">评论列表</MudText>
    </ToolBarContent>
    <HeaderContent>
        <MudTh>昵称</MudTh>
        <MudTh>邮箱</MudTh>
        <MudTh>内容</MudTh>
        <MudTh>日期</MudTh>
    </HeaderContent>
    <RowTemplate>
        <MudTd DataLabel="Name">@context.Name</MudTd>
        <MudTd DataLabel="Email">@context.Email</MudTd>
        <MudTd DataLabel="Content">@context.Content</MudTd>
        <MudTd DataLabel="Datetime">@context.Datetime</MudTd>
    </RowTemplate>
    <PagerContent>
        <MudTablePager/>
    </PagerContent>
</MudTable>


@code {
    private bool dense = false;
    private bool hover = true;
    private bool striped = false;
    private bool bordered = false;
    private string searchString1 = "";
    private Model.Comment selectedItem1 = null;
    bool loading = true;
    private HashSet<Model.Comment> selectedItems = new HashSet<Model.Comment>();

    private IEnumerable<Model.Comment> Elements = new List<Model.Comment>();

    protected override async Task OnInitializedAsync()
    {
        Elements = await Db.Select<Model.Comment>()
            .OrderBy("ArticleId DESC")
            .ToListAsync();
        loading = false;
    }

    private bool FilterFunc1(Model.Comment element) => FilterFunc(element, searchString1);

    private bool FilterFunc(Model.Comment element, string searchString)
    {
        if (string.IsNullOrWhiteSpace(searchString))
            return true;

        if (element.Content.Contains(searchString, StringComparison.OrdinalIgnoreCase))
            return true;
        return false;
    }

}